name: üöÄ D√©ploiement automatique Informaniak

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: üåê D√©ploiement sur Informaniak
    runs-on: ubuntu-latest
    
    steps:
    - name: üìÇ Checkout du code
      uses: actions/checkout@v4
    
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: üì¶ Installation des d√©pendances
      run: npm ci
    
    - name: üß™ Tests (optionnel)
      run: npm test --if-present
    
    - name: üöÄ D√©ploiement SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.INFORMANIAK_HOST }}
        username: ${{ secrets.INFORMANIAK_USERNAME }}
        key: ${{ secrets.INFORMANIAK_PRIVATE_KEY }}
        port: ${{ secrets.INFORMANIAK_PORT || 22 }}
        script: |
          echo "üöÄ D√©but du d√©ploiement DDOT..."
          
          # Aller dans le r√©pertoire du projet
          cd ${{ secrets.INFORMANIAK_PROJECT_PATH || '~/DDOT' }}
          
          # Arr√™ter les processus PM2
          pm2 stop all || true
          
          # Sauvegarder la base de donn√©es
          cp urban_analysis.db urban_analysis.db.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # Mettre √† jour le code
          git pull origin main
          
          # Installer les d√©pendances si n√©cessaire
          npm install --production
          
          # Activer l'environnement Python et installer les d√©pendances
          source venv/bin/activate 2>/dev/null || python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Cr√©er les dossiers n√©cessaires
          mkdir -p logs uploads temp-ocr cache/parcels
          
          # T√©l√©charger les donn√©es OCR si n√©cessaire
          if [ ! -f "eng.traineddata" ]; then
            wget -O eng.traineddata https://github.com/tesseract-ocr/tessdata/raw/main/eng.traineddata
          fi
          if [ ! -f "fra.traineddata" ]; then
            wget -O fra.traineddata https://github.com/tesseract-ocr/tessdata/raw/main/fra.traineddata
          fi
          
          # Ex√©cuter les migrations
          sqlite3 urban_analysis.db < migrations/001_create_parcels_cache.sql 2>/dev/null || true
          
          # Red√©marrer avec PM2
          pm2 start ecosystem.config.js --env production
          
          # Sauvegarder la configuration PM2
          pm2 save
          
          # Afficher le statut
          pm2 status
          
          echo "‚úÖ D√©ploiement DDOT termin√© avec succ√®s!"
    
    - name: üìä Notification de statut
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ D√©ploiement r√©ussi sur Informaniak!"
        else
          echo "‚ùå √âchec du d√©ploiement sur Informaniak"
        fi 