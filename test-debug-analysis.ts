#!/usr/bin/env npx ts-node
require('dotenv').config();

import { performComprehensiveAnalysis } from './src/lib/parcelAnalysisOrchestrator';
import { analyzeSimple } from './src/lib/simpleDocumentAnalysis';

async function debugAnalysis() {
  console.log('üîç DEBUG ANALYSE COMPL√àTE\n');
  
  // Test avec la vraie parcelle 12558 V√©troz
  console.log('=== TEST 1: Parcelle 12558 V√©troz ===\n');
  
  try {
    // D'abord rechercher la parcelle
    const result = await performComprehensiveAnalysis('12558 V√©troz');
    
    console.log('üìç R√©sultat recherche:');
    console.log('  - EGRID:', result.searchResult?.egrid);
    console.log('  - Num√©ro:', result.searchResult?.number);
    console.log('  - Municipality:', result.parcelDetails?.municipality);
    console.log('  - Zone RDPPF:', result.rdppfData?.zoneAffectation?.designation);
    console.log('  - Surface:', result.parcelDetails?.surface || result.rdppfData?.zoneAffectation?.surface);
    
    if (result.searchResult?.egrid) {
      console.log('\nüìÑ Lancement analyse simple avec EGRID...');
      const municipality = result.parcelDetails?.municipality || 
        result.searchResult?.number?.match(/<b>([^<]+)<\/b>/)?.[1]?.replace(/^\d{4}\s+/, '') || 
        'V√©troz';
      
      const simpleResult = await analyzeSimple(result.searchResult.egrid, municipality);
      
      console.log('\n‚úÖ R√©sultat analyse (premiers 500 caract√®res):');
      console.log(simpleResult.substring(0, 500));
      
      // V√©rifier le contenu
      const hasRealData = simpleResult.includes('Zone r√©sidentielle') || 
                         simpleResult.includes('IBUS') || 
                         simpleResult.includes('862 m¬≤');
      
      if (hasRealData) {
        console.log('\n‚úÖ L\'analyse contient des donn√©es r√©elles');
      } else {
        console.log('\n‚ö†Ô∏è L\'analyse semble g√©n√©rique');
      }
    }
    
  } catch (error: any) {
    console.error('‚ùå Erreur:', error.message);
  }
  
  // Test avec Route Cantonale 199
  console.log('\n\n=== TEST 2: Route Cantonale 199 V√©troz ===\n');
  
  try {
    const result2 = await performComprehensiveAnalysis('Route Cantonale 199 V√©troz');
    
    console.log('üìç R√©sultat recherche:');
    console.log('  - EGRID:', result2.searchResult?.egrid);
    console.log('  - Num√©ro:', result2.searchResult?.number);
    console.log('  - Zone RDPPF:', result2.rdppfData?.zoneAffectation?.designation);
    
    if (result2.searchResult?.egrid) {
      const municipality = result2.parcelDetails?.municipality || 
        result2.searchResult?.number?.match(/<b>([^<]+)<\/b>/)?.[1]?.replace(/^\d{4}\s+/, '') || 
        'V√©troz';
      
      console.log('\nüìÑ Analyse pour parcelle en zone agricole...');
      const simpleResult = await analyzeSimple(result2.searchResult.egrid, municipality);
      
      console.log('\n‚úÖ R√©sultat (premiers 500 caract√®res):');
      console.log(simpleResult.substring(0, 500));
      
      // Cette parcelle devrait √™tre en zone agricole
      const isAgricole = simpleResult.includes('agricole') || 
                        simpleResult.includes('hors zone √† b√¢tir') ||
                        simpleResult.includes('LAT');
      
      if (isAgricole) {
        console.log('\n‚úÖ Parcelle correctement identifi√©e comme agricole/hors zone');
      } else {
        console.log('\n‚ö†Ô∏è Zone non correctement identifi√©e');
      }
    }
    
  } catch (error: any) {
    console.error('‚ùå Erreur:', error.message);
  }
}

debugAnalysis().catch(console.error);