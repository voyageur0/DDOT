RewriteEngine On

# Redirection HTTPS (optionnel mais recommandé)
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Proxy vers Node.js pour les routes API
RewriteCond %{REQUEST_URI} ^/api/
RewriteRule ^(.*)$ http://localhost:3001/$1 [P,L]

# Proxy vers Python Flask pour les routes spécifiques
RewriteCond %{REQUEST_URI} ^/python/
RewriteRule ^python/(.*)$ http://localhost:5000/$1 [P,L]

# Servir les fichiers statiques directement
RewriteCond %{REQUEST_URI} ^/public/
RewriteRule ^public/(.*)$ public/$1 [L]

# Servir les uploads directement
RewriteCond %{REQUEST_URI} ^/uploads/
RewriteRule ^uploads/(.*)$ uploads/$1 [L]

# Servir les règlements directement
RewriteCond %{REQUEST_URI} ^/reglements/
RewriteRule ^reglements/(.*)$ reglements/$1 [L]

# Proxy toutes les autres requêtes vers Node.js
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ http://localhost:3001/$1 [P,L]

# Configuration des en-têtes
Header always set X-Frame-Options "SAMEORIGIN"
Header always set X-XSS-Protection "1; mode=block"
Header always set X-Content-Type-Options "nosniff"
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# Configuration du cache pour les fichiers statiques
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
  ExpiresActive On
  ExpiresDefault "access plus 1 month"
</FilesMatch>

# Configuration MIME types
AddType application/javascript .js
AddType text/css .css
AddType image/svg+xml .svg

# Compression Gzip
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Sécurité - Cacher les fichiers sensibles
<FilesMatch "^\.">
    Order allow,deny
    Deny from all
</FilesMatch>

<FilesMatch "\.(env|log|db)$">
    Order allow,deny
    Deny from all
</FilesMatch> 